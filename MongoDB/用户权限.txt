MongoDB用户权限
内建的角色

数据库用户角色：read、readWrite;
数据库管理角色：dbAdmin、dbOwner、userAdmin；
集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；
备份恢复角色：backup、restore；
所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase
超级用户角色：root // 这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）
内部角色：__system

以 admin 用户身份进入mongo ：
docker exec -it  eaebf0fd868b  mongo admin
创建一个 admin 管理员账号：
db.createUser({ user: 'admin', pwd: '123456', roles: [ { role: "userAdminAnyDatabase", db: "admin" } ] });
对 admin 用户 进行身份认证：
db.auth("admin","123456");
退出：
exit

创建 用户、密码和数据库：
db.createUser({ user: 'user1', pwd: '123456', roles: [ { role: "readWrite", db: "app" } ] });
db.auth("user1","123456");

示例
root@iZwz92w1juq9pnqhbv7oj8Z:/# docker exec -it  eaebf0fd868b  mongo user1
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/user1?compressors=disabled&gssapiServieName=mongodb
Implicit session: session { "id" : UUID("07d5d662-2cbc-4c51-bc14-2ec35d5a1368")}
MongoDB server version: 4.2.0
>
>
> db.auth("user1","123456");
Error: Authentication failed.
0
> db.auth("user1","123456");
Error: Authentication failed.
0
> use app
switched to db app
> db.auth("user1","123456");
1
> db.test.save({name:"zhangsan"});
WriteResult({ "nInserted" : 1 })
> db.test.find()
{ "_id" : ObjectId("5d8b628d9842e7488b49d16f"), "name" : "zhangsan" }
> exit
bye
